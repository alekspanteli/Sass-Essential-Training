////////////////////////
//Making variable global
////////////////////////

// $bg-primary: green;

// h1 {
//   $bg-primary: red !global;
//   color: $bg-primary;
// }

// p {
//   color: $bg-primary;
// }

////////////////////////
// Hyphens vs Undescores
////////////////////////

// $bg-primary: green;
// $bg_primary: yellow;

// h1 {
//   color: $bg-primary;
// }

////////////////////////
// Nesting
////////////////////////

// h1 {
//   color: yellow;
//   margin-bottom: 0;
// }

// .box {
//   padding: 30px;
//   background-color: beige;
//   color: black;
//   h1,
//   p {
//     margin: 0;
//   }
//   h1 {
//     color: red;
//   }
// }

////////////////////////
// Parent Selector
////////////////////////

// .btn {
//   background-color: red;
//   border: 0;
//   border-radius: 10px;
//   padding: 1rem 2rem;
//   min-width: 200px;
//   &:hover {
//     background-color: green;
//   }
//   &--primary {
//     background-color: yellow;
//   }
//   .container & {
//     background-color: green;
//   }
// }

////////////////////////
// Mixins
////////////////////////

// @mixin btn($color: red, $radius: 10px) {
//   background-color: $color;
//   border-radius: $radius;
// }

// .btn {
//   @include btn;
//   &--primary {
//     @include btn(green, 5px);
//   }
// }

////////////////////////
// Extend
////////////////////////

// .btn {
//   border: 0;
//   &--primary {
//     @extend .btn;
//     background-color: red;
//   }
//   &--secondary {
//     @extend .btn;
//     background-color: yellow;
//   }
// }

////////////////////////
// Challenge 1
////////////////////////

// .btn-wrap {
//   display: flex;
//   gap: 10px;
// }

// @mixin btn($background-color) {
//   background-color: $background-color;
//   &:hover {
//     text-decoration: none;
//   }
// }

// .btn {
//   text-decoration: underline;
//   &--primary {
//     @include btn(red);
//   }
//   &--secondary {
//     @include btn(green);
//   }
// }

////////////////////////
// Interpolation
////////////////////////

// @mixin btn($name: '', $bg: '', $col: '') {
//   .btn#{$name} {
//     background: $bg;
//     color: $col;
//   }
// }

// @include btn('--secondary', red, yellow);
// @include btn('--primary', green, pink);

////////////////////////
// Placeholders
////////////////////////

// %btn {
//   background-color: red;
//   color: green;
// }

// .btn {
//   &--primary {
//     @extend %btn;
//   }
//   &--secondary {
//     @extend %btn;
//   }
// }

////////////////////////
// Lists
////////////////////////

$myArray: primary secondary warning 'item info';
/* #{nth($myArray, 1)} */
$myArray: primary, secondary, warning, 'item info';
/* #{nth($myArray, 2)} */
$myArray: (primary, secondary, warning, 'item info');
/* #{nth($myArray, 3)} */
$myArray: [primary, secondary, warning, 'item info' ];
/* #{nth($myArray, 4)} */
$myArray: [primary, secondary, warning, 'item info' ];
/* #{nth($myArray, -1)} */

////////////////////////
// Each
////////////////////////

// @mixin btn($name: '', $bg: '', $col: '') {
//   .btn#{$name} {
//     background: $bg;
//     color: $col;
//   }
// }

// $buttons: --primary red yellow, --secondary green blue;

// @each $name, $bg, $col in $buttons {
//   @include btn($name, $bg, $col);
// }

////////////////////////
// For
////////////////////////

// $font-size: (3rem, 2.5rem, 2rem, 1rem);

// @for $i from 1 through length($font-size) {
//   h#{$i} {
//     font-size: nth($font-size, $i);
//   }
// }

////////////////////////
// Maps
////////////////////////

// @use 'sass:map';

// $colorList: (
//   'primary': red,
//   'secondary': green,
//   'accent': yellow,
// );

// $buttons: (
//   '--primary': (
//     red,
//     green,
//   ),
//   '--secondary': (
//     pink,
//     yellow,
//   ),
//   // '--circle': (
//   //   pink,
//   //   yellow,
//   //   true,
//   // ),,,,
// );

// @mixin btn($name: '', $bg: black, $col: red, $oval: false) {
//   .btn#{$name} {
//     background: $bg;
//     color: $col;
//     @if $oval {
//       border-radius: 80%;
//     } @else {
//       border-radius: 5px;
//     }
//   }
// }

// @include btn('');
// @include btn('--circle', blue, red, true);

// @each $key, $values in $buttons {
//   @include btn($key, $values...);
// }

@use 'sass:map';
@use 'sass:color';

$badges: (
  '--primary': (
    red,
    green,
  ),
  '--danger': (
    blue,
    white,
  ),
  '--info': (
    red,
    yellow,
  ),
);

@mixin badge($name: '', $bg: #444, $col: white, $style: null) {
  .badge#{$name} {
    border: 0;
    @if $style == 'pill' {
      border-radius: 30px !important;
      padding: 1em !important;
    } @else {
      border-radius: 5px;
      padding: 0.5em;
    }
    padding: 0.5em;
    background-color: $bg;
    font-size: 1em;
    color: $col;
    margin: 0.1em;
    display: inline-block;
    cursor: pointer;
    &:hover {
      background-color: color.scale($bg, $lightness: - 30%);
    }
  }
}

@include badge('');
@include badge('--pill', $style: 'pill');

@each $key, $values in $badges {
  @include badge($key, $values...);
}
